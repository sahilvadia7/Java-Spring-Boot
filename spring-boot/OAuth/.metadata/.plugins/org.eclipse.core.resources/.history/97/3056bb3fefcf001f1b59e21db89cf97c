package com.example.OAuth.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class LoginConfig {

	@Bean
	public SecurityFilterChain defaulSecurityFilterChain(HttpSecurity http) throws Exception {
		
		http.authorizeHttpRequests(auth -> auth.anyRequest().authenticated())
			.oauth2Login(Customizer.withDefaults())
			.logout()
            .logoutSuccessUrl("/") // Redirect after logout
            .invalidateHttpSession(true) // Invalidate session
            .clearAuthentication(true) // Clear authentication
            .deleteCookies("JSESSIONID"); 
		return http.build();
	}
}
